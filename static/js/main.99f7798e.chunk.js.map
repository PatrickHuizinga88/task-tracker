{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","text","className","defaultProps","Header","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","style","color","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","href","margin","verticalAlign","marginRight","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99f7798e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({onClick, text}) => {\r\n    return (\r\n        <button \r\n            onClick={onClick} \r\n            className=\"btn\"\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    // text: PropTypes.string,\r\n}\r\n\r\nButton.defaultProps = {\r\n    text: 'Add',\r\n}\r\n\r\nexport default Button\r\n","import { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = ({onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Task Tracker</h1>\r\n            {location.pathname === \"/\" && (\r\n                <Button onClick={onAdd} text={showAdd ? 'Add' : 'Close'}/>\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        //className: add the reminder class when the reminder prop is true\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} <FaTimes onClick={() => onDelete(task.id)} \r\n                                     style={{ color: 'red', cursor: 'pointer'}}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    //create constants with their default value\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        //Give an error if there is no text\r\n        if(!text) {\r\n            alert(\"Please fill in the task.\")\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Enter your task\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day and time</label>\r\n                <input type=\"text\" placeholder=\"Enter the day and time\" value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save task\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.3</h4>\r\n            <p>Last update: Sep 13th 2021</p>\r\n            <p>Made by <a href=\"https://patrickhuizinga88.github.io/\">Patrick Huizinga</a></p>\r\n            <Link to=\"/\" className=\"btn\" style={{margin: '20px 0 0 0'}}>\r\n                <FaArrowLeft style={{verticalAlign: 'middle', marginRight: '5px'}}/>\r\n                Go back\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch ('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  //Fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch (`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //Add task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  //Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={!showAddTask} />\n        \n        <Route path=\"/\" exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n            ) : (\n              'No tasks to show.'\n            )}\n            <p className=\"task-tip\">Double click a task to enable/disable the reminder.</p>\n          </>\n        )} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}